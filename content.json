{"meta":{"title":"jdbEwl的blog","subtitle":"","description":"","author":"JDBeWL","url":"https://jdbewl.github.io/async","root":"/async/"},"pages":[{"title":"about","date":"2023-08-16T11:59:09.862Z","updated":"2023-08-16T11:59:09.862Z","comments":true,"path":"about/index.html","permalink":"https://jdbewl.github.io/async/about/index.html","excerpt":"","text":"关于隐私 第三方安全检测安全+ 信任+ 本网站不会追踪访客行为，且不要求访客提供任何敏感信息（比如真实姓名、身份证号码、手机号等），因而也不存在任何隐私泄漏问题。访客参与评论，必须遵守法律法规和基本道德规范，文明礼貌。严禁发布任何有关淫秽、反动、暴力、博彩、恐吓、低俗的内容或违法信息，在尊重言论自由的同时请保持和平与理性。请勿对他人采取不友好的评论或其它过激行为。 先将未来与过去都忘掉吧，那些都是虚假的泡沫与幻影，是不可触摸的真实。"}],"posts":[{"title":"C#示例代码","slug":"CSharp","date":"2023-04-08T07:28:00.000Z","updated":"2023-06-01T05:52:37.173Z","comments":true,"path":"2023/04/08/CSharp/","link":"","permalink":"https://jdbewl.github.io/async/2023/04/08/CSharp/","excerpt":"","text":"分享一首歌 出租车价钱计算12345678910111213141516171819202122232425262728293031using System;namespace ConsoleApp1&#123; internal class Class1 &#123; static void Main(string[] args) &#123; double distance,price = 0; Console.WriteLine(&quot;请输入总里程数&quot;); distance=Convert.ToDouble(Console.ReadLine()); if (distance &lt;= 3 &amp;&amp; distance &gt;= 0) &#123; price = 10; &#125; else if (distance &gt; 3 &amp;&amp; distance &lt;= 10) &#123; price = (distance - 3) * 1.2 + 10; &#125; else if (distance &gt; 10) &#123; price = (distance - 10) * 1.5 + 18.4; &#125; else &#123; Console.WriteLine(&quot;里程数错误，请重新输入&quot;); &#125; Console.WriteLine(&quot;应付的车费为：&#123;0&#125;&quot;,price); &#125; &#125;&#125; 简易计算器1234567891011121314151617181920212223242526272829303132333435363738394041using System;namespace ConsoleApp1&#123; internal class Class1 &#123; static void Main(string[] args) &#123; double no1, no2, result = 0; Console.WriteLine(&quot;请输入运算式左边的数&quot;); no1 = Convert.ToDouble(Console.ReadLine()); Console.WriteLine(&quot;请输入运算式右边的数&quot;); no2 = Convert.ToDouble(Console.ReadLine()); Console.WriteLine(&quot;请输入运算符 + - * /&quot;); string op = Console.ReadLine(); switch (op) &#123; case &quot;+&quot;: result = no1 + no2; break; case &quot;-&quot;: result = no1 - no2; break; case &quot;*&quot;: result = no1 * no2; break; case &quot;/&quot;: if (no2 != 0) &#123; result = no1 / no2; &#125; else &#123; Console.WriteLine(&quot;除数不能为0&quot;); &#125; break; &#125; Console.WriteLine(&quot;result：&#123;0:f2&#125;&quot;, result); &#125; &#125;&#125; 出行计算1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253using System;namespace ConsoleApplication8&#123; class Program &#123; static void Main(string[] args) &#123; int month, choice=0,flag=0; double money=0; Console.WriteLine(&quot;请输入出行月份&quot;); month = int.Parse(Console.ReadLine()); Console.WriteLine(&quot;请输入出行方式（1-航班出行 2-动车出行）&quot;); choice = int.Parse(Console.ReadLine()); if (month &gt;= 5 &amp;&amp; month &lt;= 10) &#123; switch (choice) &#123; case 1: money = 8800 * 0.9; break; case 2: money = 8800 * 0.75; break; &#125; &#125; else if (month &gt;= 1 &amp;&amp; month &lt; 5 || month &gt; 10 &amp;&amp; month &lt;= 12) &#123; switch (choice) &#123; case 1: money = 8800 * 0.6; break; case 2: money = 8800 * 0.3; break; &#125; &#125; else &#123; flag = 1; &#125; if (flag == 0) &#123; Console.WriteLine(&quot;实际价格为：&#123;0&#125;&quot;, money); &#125; else &#123; Console.WriteLine(&quot;输入错误&quot;); &#125; &#125; &#125;&#125; 一元二次方程计算1234567891011121314151617181920212223242526272829303132333435using System;namespace ConsoleApplication8&#123; class Program &#123; static void Main(string[] args) &#123; double a, b, c, delta, x1, x2; Console.WriteLine(&quot;请依次输入一元二次方程一般式的a、b、c&quot;); Console.WriteLine(&quot;a:&quot;); a = Convert.ToDouble(Console.ReadLine()); Console.WriteLine(&quot;b:&quot;); b = Convert.ToDouble(Console.ReadLine()); Console.WriteLine(&quot;c:&quot;); c = Convert.ToDouble(Console.ReadLine()); delta = b * b - 4 * a * c; if (delta &gt; 0) &#123; x1 = -b / 2 * a + Math.Sqrt(delta); x2 = -b / 2 * a - Math.Sqrt(delta); Console.WriteLine(&quot;x1=&#123;0&#125;,x2=&#123;1&#125;&quot;, x1, x2); &#125; else if (delta == 0) &#123; x1 = -b / 2 * a + Math.Sqrt(delta); Console.WriteLine(&quot;x1=x2=&#123;0&#125;&quot;, x1); &#125; else &#123; Console.WriteLine(&quot;该方程没有实根&quot;); &#125; &#125; &#125;&#125; 定义类并实现输出12345678910111213141516171819202122232425262728293031using System;namespace ConsoleApp1&#123; public class Panda &#123; public string name; public double age; public string feature; public void Print() &#123; Console.WriteLine(&quot;name:&#123;0&#125;，age:&#123;1&#125;，feature:&#123;2&#125;&quot;,name,age,feature); &#125; &#125; internal class Problem &#123; static void Main(string[] args) &#123; Panda Panda_1 = new Panda(); Panda Panda_2 = new Panda(); Panda_1.name = &quot;花花&quot;; Panda_1.age = 2; Panda_1.feature = &quot;优雅可爱&quot;; Panda_2.name = &quot;萌兰&quot;; Panda_2.age = 7; Panda_2.feature = &quot;阳光开朗&quot;; Panda_1.Print(); Panda_2.Print(); &#125; &#125;&#125; 计算面积与周长 1 基础算法-（计算圆）123456789101112131415161718192021222324252627282930313233343536using System;namespace ConsoleApp1&#123; public class Circle &#123; public double radius; //计算圆的周长 public double C() &#123; return 2 * Math.PI * radius; &#125; //计算圆的面积 public double Area() &#123; return Math.PI * radius * radius; &#125; &#125; internal class Problem &#123; static void Main(string[] args) &#123; //创建两个Circle对象 Circle obj1 = new Circle(); Circle obj2 = new Circle(); //第一个圆输出 Console.WriteLine(&quot;请输入第一个圆的半径：&quot;); obj1.radius = Convert.ToDouble(Console.ReadLine()); Console.WriteLine(&quot;第一个圆的周长为&#123;0:0.00&#125;，面积为：&#123;1:0.00&#125;&quot;, obj1.C(), obj1.Area()); //第二个圆输出 Console.WriteLine(&quot;请输入第二个圆的半径：&quot;); obj2.radius = Convert.ToDouble(Console.ReadLine()); Console.WriteLine(&quot;第二个圆的周长为&#123;0:0.00&#125;，面积为：&#123;1:0.00&#125;&quot;, obj2.C(), obj2.Area()); &#125; &#125;&#125; 2 使用继承和属性-（计算矩形）123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778using System;namespace ConsoleApp1&#123; class Shape &#123; private string name; public string Name &#123; get &#123; return name; &#125; set &#123; name = value; &#125; &#125; public Shape(string name) &#123; this.Name = name; &#125; &#125; class rectangle:Shape &#123; private double len; private double width; public double Len &#123; get &#123; return len; &#125; set &#123; len = value; &#125; &#125; public double Width &#123; get &#123; return width; &#125; set &#123; width = value; &#125; &#125; public rectangle(double len, double width,string name):base(name) &#123; this.Len = len; this.Width = width; &#125; public void getArea() &#123; Console.WriteLine(&quot;编号：&#123;0&#125;，面积：&#123;1&#125;&quot;,Name,Len * Width); &#125; public void getCircumference() &#123; Console.WriteLine(&quot;编号：&#123;0&#125;，周长：&#123;1&#125;&quot;, Name,2*(Len+Width)); &#125; &#125; class Program &#123; static void Main(string[] args) &#123; Console.Write(&quot;请输入长：&quot;); double Width = double.Parse(Console.ReadLine()); Console.Write(&quot;请输入宽：&quot;); double Len = double.Parse(Console.ReadLine()); rectangle Rect = new rectangle(Len, Width, &quot;Rec&quot;); Rect.getArea(); Rect.getCircumference(); &#125; &#125;&#125; 密码校验123456789101112131415161718192021222324252627282930313233343536373839using System;namespace ConsoleApplication1&#123; class AuthLogin &#123; string username=&quot;user&quot;; string password=&quot;12345678&quot;; public void Set(string username,string password) &#123; if (username == this.username) &#123; if (password == this.password) &#123; Console.WriteLine(&quot;登录成功&quot;); &#125; else &#123; Console.WriteLine(&quot;密码错误&quot;); &#125; &#125; else &#123; Console.WriteLine(&quot;账户错误&quot;); &#125; &#125; &#125; class Program &#123; static void Main(string[] args) &#123; AuthLogin user = new AuthLogin(); string username=Console.ReadLine(); string password=Console.ReadLine(); user.Set(username, password); Console.ReadKey(); &#125; &#125;&#125; 定义Book类格式化输出book信息123456789101112131415161718192021222324252627282930313233using System;namespace ConsoleApplication1&#123; public class Book &#123; double id; string name; double price; public void Set(double id,string name,double price) &#123; this.id = id; this.name = name; this.price = price; &#125; public void PrintMsg() &#123; Console.WriteLine(&quot;id:&#123;0&#125;,name:&#123;1&#125;,price:&#123;2&#125;&quot;,id,name,price); &#125; &#125; class Program &#123; static void Main(string[] args) &#123; double id = double.Parse(Console.ReadLine()); string name = Console.ReadLine(); double price = double.Parse(Console.ReadLine()); Book book = new Book(); book.Set(id,name,price); book.PrintMsg(); &#125; &#125;&#125; 银行存款12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061using ConsoleApp3;using System;using System.Collections.Generic;using System.Linq;using System.Runtime.InteropServices.WindowsRuntime;using System.Text;using System.Threading.Tasks;namespace ConsoleApp3&#123; class PersonalAccount &#123; private string accountName; private double accountRemainValue; //账户信息 public PersonalAccount(string name, double remainValue) &#123; accountName = name; accountRemainValue = remainValue; &#125; //存款 public void Deposit(double value) &#123; accountRemainValue += value; &#125; //取款 public bool Withdraw(double value) &#123; if(accountRemainValue&gt;=value) &#123; accountRemainValue -= value; return true; &#125; else &#123; Console.WriteLine(&quot;余额不足，无法取款&quot;); return false; &#125; &#125; public void DisplayRemain() &#123; Console.WriteLine(&quot;账户：&#123;0&#125;，余额：&#123;1&#125;&quot;,accountName,accountRemainValue); &#125; &#125; internal class Program &#123; static void Main(string[] args) &#123; PersonalAccount account = new PersonalAccount(&quot;张三&quot;,2000); //显示余额 account.DisplayRemain(); //存款 account.Deposit(1000); account.DisplayRemain(); //取款 account.Withdraw(4000);//失败 account.Withdraw(2000); account.DisplayRemain();//成功 &#125; &#125;&#125; 百钱买百鸡123456789101112131415161718192021222324using System;namespace ConsoleApplication12&#123; class Program &#123; static void Main(string[] args) &#123; int cock,hen,chicken; for (cock = 0; cock &lt;= 20; cock++) &#123; for (hen = 0; hen &lt;= 33; hen++) &#123; chicken = 100 - cock - hen; if (cock * 5 + hen * 3 + chicken / 3.0 == 100) &#123; Console.WriteLine(&quot;公鸡：&#123;0&#125;只，母鸡：&#123;1&#125;只，小鸡：&#123;2&#125;只&quot;, cock, hen, chicken); &#125; &#125; &#125; &#125; &#125;&#125; 素数计算1234567891011121314151617181920212223242526272829303132using System;namespace ConsoleApplication12&#123; class Program &#123; static void Main(string[] args) &#123; int i, j,count=0; for (i = 2; i &lt;= 300; i++) &#123; for (j = 2; j &lt; Math.Sqrt(i); j++) &#123; if (i % j == 0) &#123; break; &#125; &#125; if (j &gt; Math.Sqrt(i)) &#123; Console.Write(&quot;&#123;0&#125;\\t&quot;, i); count++; if (count % 10 == 0) &#123; Console.Write(&quot;\\n&quot;); &#125; &#125; &#125; Console.WriteLine(); &#125; &#125;&#125; 珠穆朗玛-对折123456789101112131415161718192021222324using System;namespace ConsoleApplication12&#123; class Program &#123; static void Main(string[] args) &#123; double h=0,x,count=0; Console.WriteLine(&quot;请输入纸的厚度x（单位：毫米）&quot;); Console.Write(&quot;x=&quot;); x=Convert.ToDouble(Console.ReadLine()); h = x; do &#123; h = 2 * h; count++; &#125; while (h &lt;= 8844.43 * 1000); Console.WriteLine(&quot;对折&#123;0&#125;次后，其厚度达到珠穆朗玛峰的高度8844.43米&quot;,count); &#125; &#125;&#125; 分数计算123456789101112131415161718192021222324252627using System;namespace ConsoleApplication1&#123; class Program &#123; static void Main(string[] args) &#123; int[] s=new int[10]; double a; int sum = 0, min = 0, max = 0; Console.WriteLine(&quot;请输入分数&quot;); for (int i = 0; i &lt; 10; i++) &#123; s[i] = int.Parse(Console.ReadLine()); &#125; max=min=s[0]; foreach (int x in s) &#123; sum += x; max = Math.Max(x, max); min = Math.Min(x, min); &#125; Console.WriteLine(&quot;平均值：&quot; + sum / 10.0 + &quot;最高分：&quot; + max + &quot;最低分：&quot; + min); &#125; &#125;&#125; 杨辉三角1234567891011121314151617181920212223242526272829303132using System;namespace ConsoleApp1&#123; class Program &#123; static void Main(string[] args) &#123; int[,] yanghui = new int[10, 10]; for(int i=0;i&lt;=9;i++) &#123; yanghui[i, 0] = 1; yanghui[i, i] = 1; &#125; for(int i=2;i&lt;=9;i++) &#123; for(int j=1;j&lt;i;j++) &#123; yanghui[i, j] = yanghui[i - 1, j - 1] + yanghui[i - 1, j]; &#125; &#125; for(int i=0;i&lt;=9;i++) &#123; for(int j=0;j&lt;=i;j++) &#123; Console.Write(&quot;&#123;0&#125;\\t&quot;, yanghui[i, j]); &#125; Console.Write(&quot;\\n&quot;); &#125; &#125; &#125;&#125;","categories":[{"name":"program","slug":"program","permalink":"https://jdbewl.github.io/async/categories/program/"}],"tags":[{"name":"practice,c#","slug":"practice-c","permalink":"https://jdbewl.github.io/async/tags/practice-c/"}]},{"title":"C练习题","slug":"C_Test","date":"2022-10-27T14:50:00.000Z","updated":"2023-08-16T10:38:06.950Z","comments":true,"path":"2022/10/27/C_Test/","link":"","permalink":"https://jdbewl.github.io/async/2022/10/27/C_Test/","excerpt":"","text":"题目一 题目描述 幼稚园终于又有新的作业了。 老师安排同学用发给同学的4根木棒拼接成一个三角形。 当然按照正常的逻辑，如果不能拼接成三角形。 必然要折断某个木棍来拼接三角形。 可是懒惰的小艺当然不会费力了！ 如果拼接不成三角形小艺就会把它凭借成类似边长 1 1 2的伪三角形。 如果伪三角形都拼接不成那就不交作业！ 输入描述 输入四根木棍的长度。 输出描述 拼接成正常三角形输出”1”,伪三角形输出”0”,否则输出”-1”。 实例代码 1234567891011121314151617181920212223#include &lt;stdio.h&gt;int checkTriangle(int a, int b, int c)&#123; if (a + b &gt; c &amp;&amp; b + c &gt; a &amp;&amp; c + a &gt; b) return 1; else if (a + b == c || a + c == b || b + c == a) return 0; else return -1;&#125;int main()&#123; int a, b, c, d; scanf(&quot;%d %d %d %d&quot;, &amp;a, &amp;b, &amp;c, &amp;d); int result = -1; if (checkTriangle(a, b, c) == 1 || checkTriangle(a, b, d) == 1 || checkTriangle(a, c, d) == 1 || checkTriangle(b, c, d) == 1) result = 1; else if (checkTriangle(a, b, c) == 0 || checkTriangle(a, b, d) == 0 || checkTriangle(a, c, d) == 0 || checkTriangle(b, c, d) == 0) result = 0; printf(&quot;%d\\n&quot;, result); return 0;&#125; 题目二 题目描述 陶陶家的院子里有一棵苹果树，每到秋天树上就会结出 10 个苹果。苹果成熟的时候，陶陶就会跑去摘苹果。陶陶有个 30 厘米高的板凳，当她不能直接用手摘到苹果的时候，就会踩到板凳上再试试。 现在已知 10 个苹果到地面的高度，以及陶陶把手伸直的时候能够达到的最大高度，请帮陶陶算一下她能够摘到的苹果的数目。假设她碰到苹果，苹果就会掉下来。 输入描述 输入包括两行数据。第一行包含 10 个 100 到 200 之间（包括 100 和 200 ）的整数（以厘米为单位）分别表示 10 个苹果到地面的高度，两个相邻的整数之间用一个空格隔开。第二行只包括一个 100 到 120 之间（包含 100 和 120 ）的整数（以厘米为单位），表示陶陶把手伸直的时候能够达到的最大高度。 输出描述 输出包括一行，这一行只包含一个整数，表示陶陶能够摘到的苹果的数目。 实例代码 12345678910111213141516#include &lt;stdio.h&gt;#define NUM 10int main()&#123; int i,j,k[NUM],n=0; for(i=0;i&lt;=9;i++) scanf(&quot;%d&quot;,&amp;k[i]); scanf(&quot;%d&quot;,&amp;j); for(i=0;i&lt;=9;i++) &#123; if(k[i]&lt;=j+30) n++; &#125; printf(&quot;%d&quot;,n); return 0;&#125; 题目三 题目描述 给一个无序数组，求最长递增的区间长度。如：[5,2,3,8,1,9] 最长区间 2,3,8 长度为 3 （注意：测试用例仅做参考，我们会根据代码质量进行评分） 输入描述 第一行输入整数n。(1&lt;&#x3D;n&lt;&#x3D;10000)表示数组的大小 第二行给出n个整数a.(-1e9&lt;&#x3D;a&lt;&#x3D;1e9) 输出描述 Nan 实例代码 12345678910111213141516171819202122232425262728293031323334353637383940414243444546#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;#define NUM 10000int solution(int n, int arr[]) &#123; int result; int i, j = 1, k[NUM], m = 0; for (i = 0; i &lt;= n; i++) &#123; if (arr[i] &lt; arr[i + 1]) j++; else &#123; k[i] = j; j = 1; &#125; if (k[i] &gt;= m) m = k[i]; &#125; result = m; return result;&#125;int main() &#123; int n; scanf(&quot;%d&quot;, &amp;n); int* arr; arr = (int*)malloc(n * sizeof(int)); for (int i = 0; i &lt; n; i++) &#123; scanf(&quot;%d&quot;, &amp;arr[i]); &#125; int result = solution(n, arr); printf(&quot;%d&quot;, result); return 0;&#125; 题目四 题目描述 已知n个整数。 每3个数算一个周期。 不足一个周期补0. 在周期的第一个位置的数的权值和等于a1+a[1+3]+… … 求三个数的最大权值。 如果最大权值为第一个数，输出’J’； 最大权值为第二个数，输出’H’； 最大权值为第三个数，输出’B’。 输入描述 第一行输入一个整数n。(1&lt;&#x3D;n&lt;&#x3D;100) 第二行输入n个整数。 输出描述 输出答案。 实例代码 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;void solution(int n, int arr[]) &#123; int i = 0, k = n, q = 0, j[3] = &#123; 0 &#125;; if (k % 3 != 0) &#123; do &#123; j[0] += arr[q]; i++; q += 3; &#125; while (i &lt; k / 3 + 1); &#125; else &#123; do &#123; j[0] += arr[q]; i++; q += 3; &#125; while (i &lt; k / 3); &#125; i=0,q = 0; if (k &gt;= 2) &#123; do &#123; j[1] += arr[q + 1]; i++; q += 3; &#125; while ((i + 1) &lt; k / 3 + 1); &#125; i=0,q = 0; if (k &gt;= 3) &#123; do &#123; j[2] += arr[q + 2]; i++; q += 3; &#125;while ((i + 2) &lt; k / 3 + 2); &#125; if (j[0] &gt; j[1] &amp;&amp; j[0] &gt; j[2]) printf(&quot;J&quot;); else if (j[1] &gt; j[2] &amp;&amp; j[1] &gt; j[0]) printf(&quot;H&quot;); else if (j[2] &gt; j[0] &amp;&amp; j[2] &gt; j[1]) printf(&quot;B&quot;);&#125;int main() &#123; int n; scanf(&quot;%d&quot;, &amp;n); int* arr; arr = (int*)malloc(n * sizeof(int)); for (int i = 0; i &lt; n; i++) &#123; scanf(&quot;%d&quot;, &amp;arr[i]); &#125; solution(n, arr); return 0;&#125; 题目五 题目描述 书是人类进步的阶梯。 小艺每周因为工作的原因会选择性的每天多读几页或者少读几页。 小艺想知道一本n页的书她会在周几读完。 输入描述 第一行输入n(1&lt;&#x3D;n&lt;&#x3D;1000)； 第二行输入7个整数，分别表示周一~周日的读书页数p(0&lt;&#x3D;p&lt;&#x3D;1000)。（不考虑7个整数都为0的情况） 输出描述 输出答案。（1-7） 实例代码12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;void solution(int n, int pages[7])&#123; int i,a,c=0,sum=0,x=0; for(i=0;i&lt;7;i++) &#123; x+=pages[i]; &#125; a=n%x; if(a==0) &#123; for(i=0;i&lt;7;i++) &#123; if(pages[i]) &#123; x-=pages[i]; &#125; else &#123; continue; &#125; if(x&lt;=0) &#123; c=i+1; &#125; &#125; &#125; else &#123; for(i=0;i&lt;7;i++) &#123; if(a&gt;0) &#123; a-=pages[i]; &#125; else &#123; c=i; break; &#125; &#125; &#125; printf(&quot;%d&quot;,c);&#125;int main() &#123; int n; scanf(&quot;%d&quot;, &amp;n); int pages[7]; int i; for (i = 0; i &lt; 7; i++) &#123; scanf(&quot;%d&quot;, &amp;pages[i]); &#125; solution(n, pages); return 0;&#125;","categories":[{"name":"program","slug":"program","permalink":"https://jdbewl.github.io/async/categories/program/"}],"tags":[{"name":"practice","slug":"practice","permalink":"https://jdbewl.github.io/async/tags/practice/"}]},{"title":"C语言实例","slug":"C","date":"2022-10-10T15:15:29.000Z","updated":"2023-09-12T12:04:58.433Z","comments":true,"path":"2022/10/10/C/","link":"","permalink":"https://jdbewl.github.io/async/2022/10/10/C/","excerpt":"","text":"长方形面积及周长计算1234567891011121314#include&lt;stdio.h&gt;int main()&#123; float h,w,s,l; printf(&quot;请输入高/宽\\n&quot;); //输入数据以进行运算 scanf(&quot;%f %f&quot;,&amp;h,&amp;w); //计算数据 s=h*w,l=2*(h+w); //输出数据 printf(&quot;面积=%.3f\\n&quot;,s); printf(&quot;周长=%.3f\\n&quot;,l); return 0;&#125; 小写字母转大写字母123456789101112#include&lt;stdio.h&gt;int main()&#123; char a,b; printf(&quot;输入任意小写字母:&quot;); //获取数据 a=getchar(); b=a-32; //输出数据 printf(&quot;结果为:%c&quot;,b); return 0;&#125; 小写字母转大写字母的另一种办法12345678910111213#include&lt;stdio.h&gt;int main()&#123; char a,b; printf(&quot;请输出小写字母:&quot;); //获取数据 scanf(&quot;%c&quot;,&amp;a); a=&#x27;a&#x27;; b=a-32; //输出数据 printf(&quot;结果为%c&quot;,b); return 0;&#125; 计算圆的面积和周长12345678910111213#include&lt;stdio.h&gt;#define PI 3.14int main()&#123; float r; printf(&quot;请输入圆的半径&quot;); //获取圆的半径 scanf(&quot;%f&quot;,&amp;r); //输出圆的半径和周长 printf(&quot;圆的半径s=%.3f\\n&quot;,PI*r*r); printf(&quot;圆的周长d=%.3f\\n&quot;,PI*r*2); return 0;&#125; 闰年的判断-11234567891011121314#include&lt;stdio.h&gt;int main()&#123; int year; printf(&quot;请输入年份：&quot;); //获取年份 scanf(&quot;%d&quot;,&amp;year); //判断年份 if(year%4==0&amp;&amp;year%100!=0||year%400==0) printf(&quot;改年份为闰年&quot;); else printf(&quot;改年份不是闰年&quot;); return 0;&#125; 闰年的判断-21234567891011121314#include&lt;stdio.h&gt;int main()&#123; int year; printf(&quot;请输入年份：&quot;); //获取年份 scanf(&quot;%d&quot;,&amp;year); //判断年份 if(year%4==0&amp;&amp;year%100!=0||year%400==0)&#123; printf(&quot;改年份为闰年&quot;);&#125; else&#123; printf(&quot;改年份不是闰年&quot;);&#125;; return 0;&#125; 数字计数123456789101112131415161718192021222324#include&lt;stdio.h&gt;int main()&#123; int sum,c0=0,c1=0,c2=0,c3=0,c4=0,c5=0,c6=0,c7=0,c8=0,c9=0; printf(&quot;请输入要计算的数据\\n&quot;); //逐个数字判断 while((sum=getchar())!=&#x27;\\n&#x27;)&#123; switch(sum) &#123; case 0:++c0;break; case 1:++c1;break; case 2:++c2;break; case 3:++c3;break; case 4:++c4;break; case 5:++c5;break; case 6:++c6;break; case 7:++c7;break; case 8:++c8;break; case 9:++c9;break; &#125; &#125; printf(&quot;0: %d次\\n1: %d次\\n2: %d次\\n3: %d次\\n4: %d次\\n5: %d次\\n6: %d次\\n7: %d次\\n8: %d次\\n9: %d次\\n&quot;,c0,c1,c2,c3,c4,c5,c6,c7,c8,c9); return 0;&#125; 三角形的判断1234567891011121314151617181920#include &lt;stdio.h&gt;int main()&#123; int a,b,c; printf(&quot;请输入三角形的三条边:&quot;); //获取三角形的三条边 scanf(&quot;%d%d%d&quot;,&amp;a,&amp;b,&amp;c); if(a+b&gt;c&amp;&amp;a+c&gt;b&amp;&amp;b+c&gt;a) if(a==b&amp;&amp;b==c&amp;&amp;a==c) printf(&quot;该三角形为等边三角形&quot;); else if(a*a+b*b==c*c||a*a+c*c==b*b||b*b+c*c==a*a) printf(&quot;该三角形为直角三角形&quot;); else if(a==b||b==c||a==c) printf(&quot;该三角形为等腰三角形&quot;); else printf(&quot;该三角形为其他三角形&quot;); else printf(&quot;这不是一个三角形的的三条边&quot;); &#125; 另外一种写法1234567891011121314151617181920212223#include&lt;stdio.h&gt;int main()&#123; int a,b,c; printf(&quot;请输入三角形的三条边&quot;); //获取三角形的三条边 scanf(&quot;%d%d%d&quot;,&amp;a,&amp;b,&amp;c); if (a+b&gt;c&amp;&amp;a+c&gt;b&amp;&amp;b+c&gt;a) &#123; if (a==b||a==c||b==c) if (a==b&amp;&amp;b==c) printf(&quot;这是一个等边三角形&quot;); else printf(&quot;这是一个等腰三角形&quot;); else if (a*a+b*b==c*c||a*a+c*c==b*b||b*b+c*c==a*a) printf(&quot;这是一个直角三角形&quot;); else pritnf(&quot;这是一个其他三角形&quot;)； &#125; else printf(&quot;这不是一个三角形的三条边&quot;); return 0;&#125; 100分内等级的判断1234567891011121314151617181920212223242526272829303132#include &lt;stdio.h&gt;int main()&#123; int c,score; int ch; printf(&quot;请输入分数&quot;); //获取分数 scanf(&quot;%d&quot;,&amp;c); score=c/10; //判断等级 if(c&gt;0&amp;&amp;c&lt;=100) &#123; switch(score) &#123; case 1: case 2: case 3: case 4: case 5:ch=&#x27;E&#x27;;break; case 6:ch=&#x27;D&#x27;;break; case 7:ch=&#x27;C&#x27;;break; case 8:ch=&#x27;B&#x27;;break; case 9:ch=&#x27;A&#x27;;break; case 10:ch=&#x27;A&#x27;;break; &#125; printf(&quot;该学生等级为%c&quot;,ch); &#125; else rintf(&quot;输入的分数错误&quot;);&#125; 按从小到大排列任意三个数1234567891011121314151617181920212223#include &lt;stdio.h&gt;int main()&#123; int a,b,c,t; printf(&quot;请输入三个不同大小的数字&quot;); //获取数字 scanf(&quot;%d%d%d&quot;,&amp;a,&amp;b,&amp;c); //判断数字 if(a&gt;b&amp;&amp;b&gt;c) &#123;t=c;c=a;a=t;&#125; else if(a&gt;c&amp;&amp;c&gt;b) &#123;t=b;b=c;c=a;a=t;&#125; else if(b&gt;c&amp;&amp;c&gt;a) &#123;t=b;b=c;c=t;&#125; else if(b&gt;a&amp;&amp;a&gt;c) &#123;t=c;c=b;b=a;a=t;&#125; else if(c&gt;a&amp;&amp;a&gt;b) &#123;t=b;b=a;a=t;&#125; else if(c&gt;b&amp;&amp;b&gt;a) &#123;a=a;b=b;c=c;&#125; printf(&quot;从小到大依次为%d %d %d&quot;,a,b,c); return 0;&#125; 折扣计算12345678910111213141516171819202122232425262728293031#include&lt;stdio.h&gt;int main()&#123; int p,c; float d,money; printf(&quot;请输入消费金额:&quot;); //获取金额 scanf(&quot;%d&quot;,&amp;p); //判断金额 if(p&gt;0) &#123; c=p/200; if(c=0) d=0; else if(c==1) d=0.05; else if(c==2) d=0.1; else if(c==3) d=0.15; else if(c==4||c==5) d=0.2; else d=0.2; money=p*(1-d); printf(&quot;实际消费金额为%.2f&quot;,money); &#125; else printf(&quot;金额错误，无法计算&quot;); return 0;&#125; 另外一种写法12345678910111213141516171819202122232425262728#include&lt;stdio.h&gt;int main()&#123; int p, c; float d, money; printf(&quot;请输入消费金额:&quot;); //获取金额 scanf(&quot;%d&quot;, &amp;p); //判断金额 if (p &gt; 0) &#123; switch &#123; case 0:d=0;break; case 1:d=0.05;break; case 2:d=0.1;break; case 3:d=0.15;break; case 4: case 5:d=0.2;break; default:d=0.2;break; &#125; money = p * (1 - d); printf(&quot;实际消费金额为%.2f&quot;, money); &#125; else printf(&quot;金额错误，无法计算&quot;); return 0;&#125; 求s&#x3D; 3+33+333+…..333333(n个)12345678910111213141516#include&lt;stdio.h&gt;int main()&#123; int i,n; double num=3,sum=0; printf(&quot;请输入循环次数：&quot;); //获取数据 scanf(&quot;%d&quot;,&amp;n); //计算数据 for(i=1;i&lt;=n;i++) &#123; sum=sum+num; num=num*10+3; &#125; printf(&quot;s=%.0lf&quot;,sum);&#125; 输出如下*号组成的图形, *号的行数由键盘输入。 实例输出： * * * * * ** * * * ** * * ** * ** ** 123456789101112131415161718#include &lt;stdio.h&gt;int main()&#123; int i,j,n; printf(&quot;请输入数字：&quot;); //获取数字 scanf(&quot;%d&quot;,&amp;n); //打印图形 for(j=1,j&lt;=n;i++) &#123; for(i=j;i&lt;=n;i++) &#123; printf(&quot;* &quot;); &#125; printf(&quot;\\n&quot;); &#125; return 0;&#125; 找出所有1000以内的回文素数123456789101112131415161718192021222324252627282930#include&lt;stdio.h&gt;int main()&#123; int i,j,n,k; //循环2到1000 for(i=2;i&lt;1000;i++) &#123; //寻找素数 for(j=2;j&lt;i;j++) &#123; if(i%j==0) break; &#125; if(j!=i) &#123; continue;//直到只有1和自身能整除时进入循环中的下一步 &#125; k=i; n=0; //判断回文数 while(k&gt;0) &#123; n=n*10+k%10; k=k/10; &#125; if(n==i) printf(&quot;%d &quot;,i); &#125; return 0;&#125; 计算e的值（可根据精度进行）123456789101112131415161718#include&lt;stdio.h&gt;int main()&#123; int i=1,n; double e = 1, sum, num = 1; //取得计算精度 scanf(&quot;%d&quot;,&amp;n); //计算不同精度的e值 do &#123; num = i * num; sum = 1 / num; e = e + sum; i++; &#125; while (i&lt;=n); printf(&quot;%.5lf&quot;, e); return 0;&#125; 计算选手平均成绩123456789101112131415161718192021222324#include&lt;stdio.h&gt;#define N 10int main()&#123; int i,sum=0,max,min,a[N]; float aver; printf(&quot;请输入成绩&quot;); for(i=0;i&lt;N;i++) &#123; scanf(&quot;%d&quot;,&amp;a[i]); &#125; max=min=a[0]; for(i=0;i&lt;N;i++) &#123; sum=sum+a[i]; if(min&gt;a[i]) min=a[i]; if(max&lt;a[i]) max=a[i]; &#125; aver=(sum-max-min)/8.0; printf(&quot;平均成绩为%.1f&quot;,aver); return 0;&#125; 累加求得1到n的素数值和12345678910111213141516171819202122232425262728293031#include&lt;stdio.h&gt;int sushu_2(int a)&#123; int j; for(j=2;j*j&lt;=a;j++)//判断是否为素数，若为真则返回真，若为假则返回假 &#123; if(a%j==0) return 0;//不为素数时返回假 &#125; return 1;//为素数时返回真 &#125;int sushu_1(int a)&#123; int i,sum=0; for(i=2;i&lt;=a;i++) &#123; if(sushu_2(i))//嵌套函数，若值为真，则累加求得素数值 &#123; sum+=i; &#125; &#125; return sum;&#125;int main()&#123; int n; printf(&quot;请输入n的值：&quot;); scanf(&quot;%d&quot;,&amp;n); printf(&quot;%d&quot;,sushu_1(n)); return 0;&#125; 求斐波那契数列的值123456789101112131415#include&lt;stdio.h&gt;int fib(int a)&#123; if(a==1||a==2) return 1;//定义斐波那契数列前两项 else return fib(a-1)+fib(a-2);//递归求得三项后的斐波那契数列&#125;int main()&#123; int n; printf(&quot;请输入计算的位数n\\n&quot;); scanf(&quot;%d&quot;,&amp;n); printf(&quot;%d&quot;,fib(n));//打印斐波那契数列的值&#125; 排序（从大到小）选择排序12345678910111213141516171819202122232425262728293031323334#include&lt;stdio.h&gt;#define s 10void PaiXu_XuanZe(int n,int arr[])&#123; int i,j,t; for(j=0;j&lt;n-1;j++) &#123; for(i=j+1;i&lt;n;i++) &#123; if(arr[j]&lt;arr[i]) &#123; t=arr[i]; arr[i]=arr[j]; arr[j]=t; &#125; &#125; &#125;&#125;int main()&#123; int N[s],i; printf(&quot;请输入需要排列的数字\\n&quot;); for(i=0;i&lt;s;i++) &#123; scanf(&quot;%d&quot;,&amp;N[i]); &#125; PaiXu_XuanZe(s,N); printf(&quot;结果为：&quot;); for(i=0;i&lt;s;i++) &#123; printf(&quot;%-4d&quot;,N[i]); &#125; return 0;&#125; 冒泡排序12345678910111213141516171819202122232425262728293031323334#include&lt;stdio.h&gt;#define s 10void PaiXu_MaoPao(int n,int arr[])&#123; int i,j,t; for(j=0;j&lt;n-1;j++) &#123; for(i=0;i&lt;n-j-1;i++) &#123; if(arr[i]&lt;arr[i++]) &#123; t=arr[i+1]; arr[i+1]=arr[i]; arr[i]=t; &#125; &#125; &#125;&#125;int main()&#123; int N[s],i; printf(&quot;请输入需要排列的数字\\n&quot;); for(i=0;i&lt;s;i++) &#123; scanf(&quot;%d&quot;,&amp;N[i]); &#125; PaiXu_XuanZe(s,N); printf(&quot;结果为：&quot;); for(i=0;i&lt;s;i++) &#123; printf(&quot;%-4d&quot;,N[i]); &#125; return 0;&#125; 学生信息管理系统include &lt;stdio.h&gt;#include &lt;string.h&gt;#include &lt;stdlib.h&gt;#define Header printf(&quot;|学号 |姓名 |年龄 |性别 |出生年月 |地址 |电话 |E-mail\\n&quot;)#define Print printf(&quot;|%-12d |%-8s |%-8d |%-8s |%-12s |%-30s |%-12s |%-8s\\n&quot;,stu[p].StuNum,stu[p].StuName,stu[p].StuAge,stu[p].StuSex,stu[p].StuBirth,stu[p].StuAddress,stu[p].StuTel,stu[p].StuEmail) struct StuInf&#123; int StuNum; char StuName[13]; int StuAge; char StuSex[4]; char StuBirth[12]; char StuAddress[80]; char StuTel[16]; char StuEmail[20];&#125;stu[100];int Saveflag=0;void Menu()&#123; printf(&quot;***************学生信息管理系统****************\\n&quot;); printf(&quot; 主菜单 \\n&quot;); printf(&quot; 1录入学生信息 2查询学生信息 \\n&quot;); printf(&quot; 3浏览学生信息 4删除学生信息 \\n&quot;); printf(&quot; 5修改学生信息 6保存学生信息 \\n&quot;); printf(&quot; 0退出系统 \\n&quot;); printf(&quot;***********************************************\\n&quot;);&#125;int OpenFile(int cnt)&#123; FILE *fp; int i=0; fp=fopen(&quot;C:\\\\StuSys\\\\Student.dat&quot;,&quot;ab+&quot;); if(fp==NULL) &#123; printf(&quot;无法打开文件!&quot;); exit(0); &#125; while(!feof(fp)) &#123; if(fread(&amp;stu[i],sizeof(struct StuInf),1,fp)==1) &#123; cnt++; i++; &#125; &#125; fclose(fp); return cnt;&#125;//打开文件 int Add(int cnt)&#123; int choice,i,j,recordcnt,StuNumTemp; recordcnt=cnt; printf(&quot;开始录入学生信息\\n&quot;); for (i=cnt;i&lt;100;i++) &#123; printf(&quot;学生学号：&quot;); scanf(&quot;%d&quot;,&amp;StuNumTemp); for (j=0;j&lt;i;j++) &#123; if (stu[i].StuNum==StuNumTemp) &#123; printf(&quot;输入学号重复，请重新输入\\n&quot;); printf(&quot;学生学号:&quot;); scanf(&quot;%d&quot;, &amp;StuNumTemp); j=-1; &#125; &#125; stu[i].StuNum=StuNumTemp; printf(&quot;姓名：&quot;); scanf(&quot;%s&quot;, &amp;stu[i].StuName); printf(&quot;年龄：&quot;); scanf(&quot;%d&quot;, &amp;stu[i].StuAge); printf(&quot;性别：&quot;); scanf(&quot;%s&quot;, &amp;stu[i].StuSex); printf(&quot;出生年月（格式：xxxx.xx.xx）：&quot;); scanf(&quot;%s&quot;, &amp;stu[i].StuBirth); printf(&quot;地址：&quot;); scanf(&quot;%s&quot;, &amp;stu[i].StuAddress); printf(&quot;电话：&quot;); scanf(&quot;%s&quot;, &amp;stu[i].StuTel); printf(&quot;E-mail：&quot;); scanf(&quot;%s&quot;, &amp;stu[i].StuEmail); printf(&quot;是否继续输入？1 继续 0 退出：&quot;); scanf(&quot;%d&quot;, &amp;choice); recordcnt++; if (choice != 1) break; &#125; Saveflag = 1; printf(&quot;记录输入完成，按任意键返回主菜单...&quot;); getchar(); getchar(); return recordcnt;&#125;//写入学生数据 int Locate(int num,int cnt)&#123; int p=-1,i; for(i=0;i&lt;cnt;i++) &#123; if(stu[i].StuNum==num) &#123; p=i; break; &#125; &#125; return p;&#125;//定位学生数据 void Query(int cnt)&#123; int p,count=0,i,tempnum,choice; char tempname[13]; printf(&quot;开始查询学生信息...\\n&quot;); printf(&quot;请选择查询方式 (1 按学号 2 按姓名)：&quot;); scanf(&quot;%d&quot;,&amp;choice); switch(choice) &#123; case 1: printf(&quot;请输入要查询学生的学号：&quot;); scanf(&quot;%d&quot;,&amp;tempnum); p=Locate(tempnum,cnt); if(p==-1) &#123; printf(&quot;输入的学号错误，请重新输入...&quot;); &#125; else &#123; printf(&quot;查询的信息如下：\\n&quot;); Header; Print; printf(&quot;已输出查询到的学生，按任意键返回主菜单...&quot;); &#125; getchar(); break; case 2: getchar(); printf(&quot;请输入要查询的学生姓名：&quot;); gets(tempname); for(i=0;i&lt;cnt;i++) &#123; if(strcmp(tempname,stu[i].StuName)==0) &#123; if(count==0) &#123; Header; &#125; p=i; Print; count++; &#125; &#125; if(count==0) &#123; printf(&quot;\\n查询学生信息不存在，按任意键返回主菜单...&quot;); &#125; else &#123; printf(&quot;\\n学生信息查询完成，按任意键返回主菜单...&quot;); &#125; break; default: printf(&quot;选择错误，按任意键返回主菜单...&quot;); &#125; getchar();&#125;//查询学生数据 void ShowRecord(int cnt)&#123; int p,i,j; struct StuInf temp; if(cnt!=0) &#123; for(i=0;i&lt;cnt-1;i++) &#123; for(j=0;j&lt;cnt-i-1;j++) &#123; if(stu[j].StuNum&gt;stu[j+1].StuNum) &#123; temp=stu[j]; stu[j]=stu[j+1]; stu[j+1]=temp; &#125; &#125; &#125; //按学号对各个学生进行排序处理，方便在浏览的便于统计信息 Header; for(i=0;i&lt;cnt;i++) &#123; p=i; Print; &#125; &#125;&#125;//浏览学生数据 int Del(int cnt)&#123; int p,i,tempnum; printf(&quot;开始删除学生信息...\\n&quot;); printf(&quot;请输入要删除的学生学号：&quot;); scanf(&quot;%d&quot;,&amp;tempnum); p=Locate(tempnum,cnt); if(p==-1) &#123; printf(&quot;没有找到要删除的学生信息，按任意键返回主菜单...&quot;); &#125; else &#123; printf(&quot;要删除的学生信息如下：\\n&quot;); Header; Print; printf(&quot;请确认是否进行删除（1 确认 0 取消）：&quot;); scanf(&quot;%d&quot;,&amp;i); while(i==1) &#123; for(i=p;i&lt;cnt-1;i++) &#123; stu[i]=stu[i+1]; &#125; cnt--; Saveflag=1; i=-1; printf(&quot;\\n学生信息删除完成，按任意键返回主菜单...&quot;); &#125; &#125; getchar(); getchar(); return cnt;&#125;//删除学生数据 void Modify(int cnt)&#123; int p,j,StuNumTemp,tempnum,choice=0,c=1; printf(&quot;请输入要修改学生的学号：&quot;); scanf(&quot;%d&quot;,&amp;tempnum); p=Locate(tempnum,cnt); if(p==-1) &#123; printf(&quot;信息错误，按任意键返回主菜单...&quot;); &#125; else &#123; Header; Print; printf(&quot;\\n请重新输入学生信息&quot;); while(c) &#123; printf(&quot;\\n请输入对应编号的选项\\n&quot;); printf(&quot;1-学生学号 2-姓名 3-年龄 4-性别 5-出生年月 6-地址 7-电话 8-E-mail 0-退出修改\\n&quot;); printf(&quot;请选择要执行的操作：&quot;); scanf(&quot;%d&quot;,&amp;choice); switch(choice) &#123; case 1: printf(&quot;学生学号：&quot;); scanf(&quot;%d&quot;,&amp;StuNumTemp); break; case 2: printf(&quot;姓名：&quot;); scanf(&quot;%s&quot;, &amp;stu[p].StuName); break; case 3: printf(&quot;年龄：&quot;); scanf(&quot;%d&quot;, &amp;stu[p].StuAge); break; case 4: printf(&quot;性别：&quot;); scanf(&quot;%s&quot;, &amp;stu[p].StuSex); break; case 5: printf(&quot;出生年月（格式：xxxx.xx.xx）：&quot;); scanf(&quot;%s&quot;, &amp;stu[p].StuBirth); break; case 6: printf(&quot;地址：&quot;); scanf(&quot;%s&quot;, &amp;stu[p].StuAddress); break; case 7: printf(&quot;电话：&quot;); scanf(&quot;%s&quot;, &amp;stu[p].StuTel); break; case 8: printf(&quot;E-mail：&quot;); scanf(&quot;%s&quot;, &amp;stu[p].StuEmail); break; case 0: c=0; break; default: printf(&quot;选择错误，按任意键重新继续修改&quot;); getchar(); getchar(); break; &#125; &#125; Saveflag=1; printf(&quot;信息修改完成，任意键退出修改&quot;); &#125; getchar(); getchar();&#125;//修改学生数据 void SaveFile(int cnt)&#123; FILE *fp; int i=0; if(Saveflag==1) &#123; fp=fopen(&quot;C:\\\\StuSys\\\\Student.dat&quot;,&quot;wb&quot;); for(;i&lt;cnt;i++) fwrite(&amp;stu[i],sizeof(struct StuInf),1,fp); fclose(fp); Saveflag=0; &#125;&#125;//存盘 void ExitSystem(int cnt)&#123; int choice=0; if(Saveflag==1) &#123; printf(&quot;信息已发生改变，是否保存？（1 保存退出 2 不保存退出）：&quot;); scanf(&quot;%d&quot;,&amp;choice); if(choice==1) &#123; SaveFile(cnt); printf(&quot;文件写入完成，按任意键退出...&quot;); &#125; &#125; else &#123; printf(&quot;按任意键退出...&quot;); &#125; getchar(); getchar(); exit(0);&#125;//退出系统 int main()&#123; int choice=0,count=0; count=OpenFile(count); while(1) &#123; system(&quot;cls&quot;); Menu(); printf(&quot;请输入你的选择：&quot;); scanf(&quot;%d&quot;,&amp;choice); switch(choice) &#123; case 1: count=Add(count); break; case 2: Query(count); break; case 3: if (count == 0) printf(&quot;当前没有学生信息，按任意键返回主菜单...&quot;); else &#123; printf(&quot;开始显示当前已存储的学生信息...\\n&quot;); printf(&quot;学生信息如下...\\n&quot;); ShowRecord(count); printf(&quot;已显示当前学生信息，按任意键返回主菜单...&quot;); getchar(); getchar(); &#125; break; case 4: Del(count); break; case 5: Modify(count); break; case 6: SaveFile(count); printf(&quot;保存文件完成，按任意键返回主菜单...&quot;); getchar(); getchar(); break; case 0: ExitSystem(count); default: printf(&quot;选择错误，请重新输入...&quot;); getchar(); getchar(); &#125; &#125;&#125;","categories":[{"name":"program","slug":"program","permalink":"https://jdbewl.github.io/async/categories/program/"}],"tags":[{"name":"program","slug":"program","permalink":"https://jdbewl.github.io/async/tags/program/"}]},{"title":"Java语言实例","slug":"Java","date":"2022-10-10T15:15:29.000Z","updated":"2023-09-12T12:10:53.420Z","comments":true,"path":"2022/10/10/Java/","link":"","permalink":"https://jdbewl.github.io/async/2022/10/10/Java/","excerpt":"","text":"猜数字小游戏1234567891011121314151617181920212223242526272829package com.demo;import java.util.Scanner;public class Test &#123; public static void main(String[] args)&#123; //获得1至100的随机数 int number = (int)(Math.random()*100+1); //输出要求 System.out.println(&quot;给你一个1至100之间的整数，请猜测这个数&quot;); System.out.print(&quot;输入您的猜测：&quot;); Scanner input = new Scanner(System.in); //循环判断 boolean x = false; do &#123; //获得用户数据 int guess = input.nextInt(); //判断数据大小 if (guess &gt; number) &#123; System.out.print(&quot;猜大了，再输入你的猜测:&quot;); &#125; else if (guess &lt; number) &#123; System.out.print(&quot;猜小了，再输入你的猜测:&quot;); &#125; else &#123; System.out.print(&quot;猜对了！&quot;); x = true; &#125; &#125;while(!x); &#125;&#125;","categories":[{"name":"program","slug":"program","permalink":"https://jdbewl.github.io/async/categories/program/"}],"tags":[{"name":"program","slug":"program","permalink":"https://jdbewl.github.io/async/tags/program/"}]}],"categories":[{"name":"program","slug":"program","permalink":"https://jdbewl.github.io/async/categories/program/"}],"tags":[{"name":"practice,c#","slug":"practice-c","permalink":"https://jdbewl.github.io/async/tags/practice-c/"},{"name":"practice","slug":"practice","permalink":"https://jdbewl.github.io/async/tags/practice/"},{"name":"program","slug":"program","permalink":"https://jdbewl.github.io/async/tags/program/"}]}